/*	==========================================================================
	
	    ____                           
	   / __/__  ___ ____  ___  ___ ____
	  _\ \/ _ \/ _ `/ _ \/ _ \/ -_) __/
	 /___/_//_/\_,_/ .__/ .__/\__/_/   
	              /_/  /_/     

	The snappy alternative to stretchy™
	by swirrl.com version 0.2

	========================================================================== */

/* ==========================================================================
   §0: Reset & blank slate
   ========================================================================== */

@import "vendor/normalize/normalize";

/**
 * Reset the reset
 */

html * {
	box-sizing: border-box;
}

body, div, h1, h2, h3, h4, h5, h6, p, blockquote, pre, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, th, td, article, aside, figure, footer, header, hgroup, menu, nav, section {
	border: 0;
	margin: 0;
	padding: 0;
}

h1, h2, h3, h4, h5, h6 {
	font-size: 1em;
	font-weight: normal;
	line-height: 1em;
}

a {
	text-decoration: none; // for accessibility reasons, you should put this back wherever practical
}

/**
 * Typeplate for basic styles
 */

@import "vendor/typeplate/typeplate";

/* ==========================================================================
   §1: Grid layout
   ========================================================================== */

/* Configuration
   ========================================================================== */

$grid-font-size:		16px; 	// in pixels
$column:				48px;	// column width in pixels
$gutter:				24px;	// gutter width in pixels
$vspace:				24px;	// vertical spacing in pixels

/* DIMENSIONS adapted from Frameless by Joni Korpi <http://jonikorpi.com/>
   ========================================================================== */

$em:					$grid-font-size / 1em;	// Shorthand for outputting ems
$halfgutter:			$gutter/2;

// Column-widths in variables, in ems
 $cols1: ( 1 * ($column + $gutter) - $gutter) / $em;
 $cols2: ( 2 * ($column + $gutter) - $gutter) / $em;
 $cols3: ( 3 * ($column + $gutter) - $gutter) / $em;
 $cols4: ( 4 * ($column + $gutter) - $gutter) / $em;
 $cols5: ( 5 * ($column + $gutter) - $gutter) / $em;
 $cols6: ( 6 * ($column + $gutter) - $gutter) / $em;
 $cols7: ( 7 * ($column + $gutter) - $gutter) / $em;
 $cols8: ( 8 * ($column + $gutter) - $gutter) / $em;
 $cols9: ( 9 * ($column + $gutter) - $gutter) / $em;
$cols10: (10 * ($column + $gutter) - $gutter) / $em;
$cols11: (11 * ($column + $gutter) - $gutter) / $em;
$cols12: (12 * ($column + $gutter) - $gutter) / $em;
$cols13: (13 * ($column + $gutter) - $gutter) / $em;
$cols14: (14 * ($column + $gutter) - $gutter) / $em;
$cols15: (15 * ($column + $gutter) - $gutter) / $em;
$cols16: (16 * ($column + $gutter) - $gutter) / $em;
$cols17: (17 * ($column + $gutter) - $gutter) / $em;
$cols18: (18 * ($column + $gutter) - $gutter) / $em;
$cols19: (19 * ($column + $gutter) - $gutter) / $em;
$cols20: (20 * ($column + $gutter) - $gutter) / $em;
$cols21: (21 * ($column + $gutter) - $gutter) / $em;
$cols22: (22 * ($column + $gutter) - $gutter) / $em;
$cols23: (23 * ($column + $gutter) - $gutter) / $em;
$cols24: (24 * ($column + $gutter) - $gutter) / $em;
$cols25: (25 * ($column + $gutter) - $gutter) / $em;
$cols26: (26 * ($column + $gutter) - $gutter) / $em;

/* Breakpoints
   ========================================================================== */

/**
 * Example usage:
 * @media screen and (min-width: $mobile){}
 */

$mobile: 				15em 	* $em;
$tablet:				37.5em 	* $em;
$widescreen:			57em 	* $em;

/**
 * Example usage:
 * @media #{$screen-mobile} {}
 */

$screen-mobile: 		"only screen and (min-width : #{$mobile})";
$screen-tablet:			"only screen and (min-width : #{$tablet})";
$screen-widescreen: 	"only screen and (min-width : #{$widescreen})";

/**
 * Example usage:
 * @include when (widescreen){ etc }
 */

@mixin when($media) {
	@if 		$media == mobile 		{@media #{$screen-mobile} 		{ @content; }}
	@else if 	$media == tablet 		{@media #{$screen-tablet} 		{ @content; }}
	@else if 	$media == widescreen 	{@media #{$screen-widescreen} 	{ @content; }}
}

/* Finally, the actual grid
   ========================================================================== */

.row {
	margin-left: auto;
	margin-right: auto;
	padding:0;
	position: relative;
}

.box {
	display: inline;
	float: left;
	margin-left: $halfgutter;
	margin-right: $halfgutter;
	max-width: 100%;
	overflow: hidden;
	width: 100%
}

.row {
	margin-bottom: 0;
	overflow: hidden;
}

/* ==========================================================================
   §2: Some element defaults
   ========================================================================== */

table {
	border: 2px solid #000;
	border-collapse: collapse;
	margin-bottom: $vspace;
	width: 100%;
}

thead,
th {
	font-weight: normal;
}

td,
th {
	padding: 6px;
	text-align: center;
}

tbody th {
	padding-left: 0;
	padding-right: 12px;
	text-align: right;
}

tr {
	border-bottom: 1px solid #000;
}

ul {
	margin-bottom: $vspace;
}
